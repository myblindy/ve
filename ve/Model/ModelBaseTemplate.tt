<#+
	class Field { public string Type, Name, Init; }
	
	Field F(string type, string name, string init = null) => new Field { Type = type, Name = name, Init = init };
	
	void Generate(string name, string where, params Field[] fields)
	{
#>

using ReactiveUI;
using System;
using Avalonia.Media;
using System.Collections.Generic;

namespace ve.Model {
public partial class <#= name #> : ReactiveObject <#= where ?? "" #>
{
	<#+ foreach(var field in fields) { #>
    private <#= field.Type #> __<#= field.Name #> <#= string.IsNullOrWhiteSpace(field.Init) ? "" : $" = {field.Init}" #>;
	
    public <#= field.Type #> <#= field.Name #>
    {
        get => __<#= field.Name #>;
        set => this.RaiseAndSetIfChanged(ref __<#= field.Name #>, value);
    }

<#+
	}
#>
	} }
<#+
	} 
#>
